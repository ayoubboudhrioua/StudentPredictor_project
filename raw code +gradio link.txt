### python code ready to deploy




import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error, r2_score, accuracy_score, precision_score, recall_score
import gradio as gr
import numpy as np
df=pd.read_csv('studentPerformance.csv')
df
lin=LinearRegression()
log=LogisticRegression()
predictors=['Study_Hours','Attendance','Practice_Tests']
target='Final_Score'
target1='Pass_Fail'
x=df[predictors]
y=df[target]
y1=df[target1]
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
xlog_train,xlog_test,y1_train,y1_test=train_test_split(x,y1,test_size=0.2,random_state=42)
scaler=StandardScaler()
xlog_train_scaled=scaler.fit_transform(xlog_train)
xlog_test_scaled=scaler.transform(xlog_test)
lin.fit(x_train,y_train)
ypred=lin.predict(x_test)
log.fit(xlog_train_scaled,y1_train)
y1pred=log.predict(xlog_test_scaled)
mse=mean_squared_error(y_test,ypred)
r2=r2_score(y_test,ypred)
accuracy=accuracy_score(y1_test,y1pred)
precision=precision_score(y1_test,y1pred)
recall=recall_score(y1_test,y1pred)
def student_prediction(study_hours,attendance,practice_tests):
  new_data=np.array([[float(study_hours),float(attendance),float(practice_tests)]])
  new_data_scaled=scaler.transform(new_data)
  score_pred=lin.predict(new_data)[0]
  pass_fail_pred=log.predict(new_data_scaled)[0]
  if pass_fail_pred==1:
    p_f="PASS🎊"
  else:
    p_f="FAIL😓"
  return round(score_pred),p_f
demo=gr.Interface(
  fn=student_prediction,
  inputs=[
      gr.Number(label="Study Hours per week 👨‍🎓"),
      gr.Number(label="Attendance (%)"),
      gr.Number(label="Number of Practice Tests")
  ],
  outputs=[
      gr.Number(label="Predicted Score"),
      gr.Textbox(label="Pass/Fail")
  ],
  title="🎓 Student Performance Predictor",
  description="Enter student details to predict grade and pass/fail outcome.")
demo.launch(share=True)




### gradio link ::-->  https://ffbc80b2f1d6ac3f69.gradio.live

if gradio link doesn't work just rerun the code on colab


